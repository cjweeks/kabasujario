{"version":3,"sources":["app.js"],"names":[],"mappings":"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","file":"app-compiled.js","sourcesContent":["const express = require('express');\r\nconst http = require('http');\r\nconst app = express();\r\nconst server = http.createServer(app);\r\nconst io = require('socket.io')(server);\r\nconst uuid = require('uuid/v1');\r\nconst gameServer = require('./game-server.js'); // TODO xxx\r\nconst port = process.env.PORT || 8080;\r\nconst bodyParser = require('body-parser');\r\n\r\n// In order to read body of post request with user name\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({     // to support URL-encoded bodies\r\n    extended: true\r\n}));\r\n\r\n// handle express logic\r\n// send index on request for '/'\r\napp.get('/', function (req, res) {\r\n    res.sendFile(__dirname + '/public/index.html');\r\n});\r\n\r\napp.get('/index.html', function (req, res) {\r\n    res.sendFile(__dirname + '/public/index.html');\r\n});\r\n\r\napp.get('/game.html', function (req, res) {\r\n    res.redirect(__dirname + '/');\r\n});\r\n\r\napp.post('/game', function(req, res) {\r\n    console.log('got post req');\r\n    // Print the name the user entered\r\n    // Not sure if this is useful at all, or where to pass this value..\r\n    console.log(\"Name: \" + req.body.name);\r\n    res.sendFile(__dirname + \"/game.html\");\r\n});\r\n\r\n// send public files on request\r\napp.use('/public', express.static(__dirname + '/public'));\r\n\r\n// start the server\r\nserver.listen(port, function () {\r\n    console.log('Started inServer on ' + port);\r\n});\r\n\r\n// handle the socket connection\r\nio.on('connection', function (clientSocket) {\r\n    // create an id for the new player\r\n    clientSocket.clientPlayerId = uuid();\r\n\r\n    console.log('Player ' + clientSocket.clientPlayerId + ' connected');\r\n\r\n    // find a gameLogic for the new player\r\n    gameServer.findGame(clientSocket);\r\n\r\n    clientSocket.on('manual-ping', function (data) {\r\n        gameServer.onPing(clientSocket, data);\r\n    });\r\n\r\n    clientSocket.on('input', function (data) {\r\n        gameServer.onInput(clientSocket, data);\r\n    });\r\n\r\n    clientSocket.on('attach', function (data) {\r\n        gameServer.onAttach(clientSocket, data);\r\n    });\r\n\r\n    clientSocket.on('detach', function (data) {\r\n        gameServer.onDetach(clientSocket, data);\r\n    });\r\n\r\n    clientSocket.on('disconnect', function () {\r\n        console.log('Player ' + clientSocket.clientPlayerId + ' disconnected');\r\n\r\n        // alert the gameLogic that the player has left\r\n        if(clientSocket.game && clientSocket.game.gameId) {\r\n\r\n            // player leaving a gameLogic should destroy that gameLogic\r\n            gameServer.removePlayer(clientSocket.game.gameId, clientSocket.clientPlayerId);\r\n\r\n        } else {\r\n            console.log('Tried to remove player ' + clientSocket.clientPlayerId + ' but could not find associated game.');\r\n        }\r\n    });\r\n\r\n    clientSocket.on('playername', function(data){\r\n\r\n        if(clientSocket.game){\r\n            clientSocket.game.gameLogic.players[clientSocket.clientPlayerId].name = data.name;\r\n            console.log(\"NAME: \" + data.name);\r\n        }\r\n    });\r\n});\r\n"]}